{"version":3,"sources":["apis/unsplash.js","apis/googleGeolocation.js","apis/openWeatherMap.js","actions/index.js","components/LocationTime.js","components/Day.js","components/Forecast.js","components/Container.js","components/App.js","reducers/index.js","reducers/imageReducer.js","reducers/locationReducer.js","reducers/forecastReducer.js","reducers/weatherReducer.js","index.js"],"names":["axios","create","baseURL","headers","Authorization","concat","process","response","LocationTime","date","Date","hours","getHours","minutes","getMinutes","amPM","_this$getTime","this","getTime","city","props","location","address_components","long_name","state","short_name","react_default","a","createElement","className","React","Component","currentTemp","minimumTemp","maximumTemp","windSpeed","windDirection","dayOfWeek","weatherIcon","Day","renderHelper","forecast","_this","length","weather","main","dayCheck","dt","getDay","setDayOfWeek","temp","toFixed","temp_min","temp_max","wind","speed","setWeatherIcon","Math","floor","minTempArray","map","min","sort","tempSort","maxTempArray","max","totalWindSpeed","reduce","acc","value","windDirectionDegrees","deg","setWindDirection","getWeather","lat","long","weatherIconArray","dayArray","i","push","icon","slice","includes","b","alt","src","connect","_ref5","Object","asyncToGenerator","regenerator_default","mark","_callee5","dispatch","wrap","_context5","prev","next","openWeatherMap","get","sent","type","payload","data","stop","_x5","apply","arguments","Forecast","list","testDay","getDate","today","secondDay","thirdDay","fourthDay","fifthDay","listDay","components_Day","geometry","lng","getForecast","_ref4","_callee4","_context4","_x4","Container","error","cityState","href","photoProfile","links","html","photoName","name","components_LocationTime","components_Forecast","latLong","getLocation","message","results","_ref2","_callee3","latlng","_context3","navigator","geolocation","getCurrentPosition","_ref3","_callee2","position","_context2","coords","latitude","longitude","googleGeolocation","_x3","_x2","App","image","style","margin","height","width","backgroundColor","backgroundImage","raw","backgroundPosition","backgroundRepeat","components_Container","photographerProfile","photographerName","getBackgroundImage","urls","user","_ref","_callee","timeOfDay","_context","unsplash","params","query","_x","combineReducers","undefined","action","store","createStore","reducers","applyMiddleware","thunk","ReactDOM","render","es","src_components_App","document","getElementById"],"mappings":"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","file":"static/js/main.4ce87a13.chunk.js","sourcesContent":["import axios from \"axios\";\n\nexport default axios.create({\n  baseURL: \"https://api.unsplash.com\",\n  headers: {\n    Authorization: `Client-ID ${process.env.REACT_APP_UNSPLASH_API_KEY}`\n  }\n});\n","import axios from \"axios\";\n\nexport default axios.create({\n  baseURL: \"https://maps.googleapis.com/maps/api/geocode\"\n});\n","import axios from \"axios\";\n\nexport default axios.create({\n  baseURL: \"https://api.openweathermap.org/data/2.5\"\n});\n","import unsplash from \"../apis/unsplash\";\nimport googleGeolocation from \"../apis/googleGeolocation\";\nimport openWeatherMap from \"../apis/openWeatherMap\";\n\nlet response = {};\n\nexport const getBackgroundImage = () => async dispatch => {\n  const timeOfDay = new Date().getHours();\n\n  if (timeOfDay > 4 && timeOfDay < 8) {\n    response = await unsplash.get(\"/photos/random\", {\n      params: {\n        query: \"dawn\"\n      }\n    });\n  } else if (timeOfDay > 7 && timeOfDay < 17) {\n    response = await unsplash.get(\"/photos/random\", {\n      params: {\n        query: \"sunlight\"\n      }\n    });\n  } else if (timeOfDay > 16 && timeOfDay < 20) {\n    response = await unsplash.get(\"/photos/random\", {\n      params: {\n        query: \"dusk\"\n      }\n    });\n  } else {\n    response = await unsplash.get(\"/photos/random\", {\n      params: {\n        query: \"night\"\n      }\n    });\n  }\n  dispatch({ type: \"FETCH_IMAGE\", payload: response.data });\n};\n\nexport const getLocation = () => async dispatch => {\n  let latlng = \"\";\n  navigator.geolocation.getCurrentPosition(\n    async position => {\n      latlng = `${position.coords.latitude},${position.coords.longitude}`;\n\n      response = await googleGeolocation.get(\n        `json?latlng=${latlng}&location_type=APPROXIMATE&result_type=locality&key=${\n          process.env.REACT_APP_LOCATION_API_KEY\n        }`\n      );\n      dispatch({ type: \"FETCH_LOCATION\", payload: response.data });\n    },\n    error => {\n      dispatch({ type: \"FETCH_LOCATION\", payload: error });\n    }\n  );\n};\n\nexport const getForecast = (lat, long) => async dispatch => {\n  response = await openWeatherMap.get(\n    `forecast?lat=${lat}&lon=${long}&units=imperial&lang=en&appid=${\n      process.env.REACT_APP_WEATHER_API_KEY\n    }`\n  );\n\n  dispatch({ type: \"FETCH_FORECAST\", payload: response.data });\n};\n\nexport const getWeather = (lat, long) => async dispatch => {\n  response = await openWeatherMap.get(\n    `weather?lat=${lat}&lon=${long}&units=imperial&lang=en&appid=${\n      process.env.REACT_APP_WEATHER_API_KEY\n    }`\n  );\n\n  dispatch({ type: \"FETCH_WEATHER\", payload: response.data });\n};\n","import React from \"react\";\n\nclass LocationTime extends React.Component {\n  getTime() {\n    const date = new Date();\n    let hours = date.getHours();\n    let minutes = date.getMinutes();\n    let amPM = \"\";\n    if (hours >= 12) {\n      amPM = \"PM\";\n      hours = hours - 12;\n    } else {\n      amPM = \"AM\";\n    }\n    if (minutes < 10) {\n      minutes = `0${minutes}`;\n    }\n    return { hours, minutes, amPM };\n  }\n\n  render() {\n    const { hours, minutes, amPM } = this.getTime();\n    // const { hours, minutes, amPM } = this.state;\n    const city = this.props.location.city[0].address_components[0].long_name;\n    const state = this.props.location.city[0].address_components[2].short_name;\n    return (\n      <div className=\"location-time\">\n        <div className=\"location\">{`${city}, ${state}`}</div>\n        <div className=\"time\">{`${hours}:${minutes} ${amPM}`}</div>\n      </div>\n    );\n  }\n}\n\nexport default LocationTime;\n","import React from \"react\";\nimport { getWeather } from \"../actions\";\nimport { connect } from \"react-redux\";\n\nlet currentTemp = null,\n  minimumTemp = null,\n  maximumTemp = null,\n  windSpeed = null,\n  windDirection = \"\",\n  dayOfWeek = \"\",\n  weatherIcon = \"\";\n\nclass Day extends React.Component {\n  componentDidMount() {\n    if (this.props.forecast.length === 0) {\n      this.props.getWeather(this.props.lat, this.props.long);\n    }\n  }\n\n  setWindDirection(windDirectionDegrees) {\n    if (windDirectionDegrees > 337.5 || windDirectionDegrees <= 22.5) {\n      windDirection = \"N\";\n    } else if (windDirectionDegrees <= 67.5) {\n      windDirection = \"NE\";\n    } else if (windDirectionDegrees <= 112.5) {\n      windDirection = \"E\";\n    } else if (windDirectionDegrees <= 157.5) {\n      windDirection = \"SE\";\n    } else if (windDirectionDegrees <= 202.5) {\n      windDirection = \"S\";\n    } else if (windDirectionDegrees <= 247.5) {\n      windDirection = \"SW\";\n    } else if (windDirectionDegrees <= 292.5) {\n      windDirection = \"W\";\n    } else if (windDirectionDegrees <= 337.5) {\n      windDirection = \"NW\";\n    }\n    return windDirection;\n  }\n\n  setWeatherIcon(forecast) {\n    let weatherIconArray = [];\n    const dayArray = [];\n\n    if (!forecast.length) {\n      dayArray.push(forecast.weather[0].icon);\n    } else {\n      for (let i = 0; i < forecast.length; i++) {\n        dayArray.push(forecast[i].weather[0].icon);\n      }\n    }\n\n    if (forecast.length === 8) {\n      weatherIconArray = dayArray.slice(2, 6);\n    } else if (forecast.length === 7) {\n      weatherIconArray = dayArray.slice(1, 5);\n    } else if (forecast.length === 6) {\n      weatherIconArray = dayArray.slice(0, 4);\n    } else if (forecast.length === 5) {\n      weatherIconArray = dayArray.slice(0, 3);\n    } else if (forecast.length === 4 || forecast.length === 2) {\n      weatherIconArray = dayArray.slice(0, 2);\n    } else if (forecast.length === 3 || forecast.length === 1) {\n      weatherIconArray = dayArray.slice(0, 1);\n    }\n\n    if (weatherIconArray.includes(\"13d\") || weatherIconArray.includes(\"13n\")) {\n      weatherIcon = \"13d\";\n    } else if (\n      weatherIconArray.includes(\"11d\") ||\n      weatherIconArray.includes(\"11n\")\n    ) {\n      weatherIcon = \"11d\";\n    } else if (\n      weatherIconArray.includes(\"10d\") ||\n      weatherIconArray.includes(\"10n\")\n    ) {\n      weatherIcon = \"10d\";\n    } else if (\n      weatherIconArray.includes(\"09d\") ||\n      weatherIconArray.includes(\"09n\")\n    ) {\n      weatherIcon = \"09d\";\n    } else if (\n      weatherIconArray.includes(\"50d\") ||\n      weatherIconArray.includes(\"50n\")\n    ) {\n      weatherIcon = \"50d\";\n    } else if (\n      weatherIconArray.includes(\"04d\") ||\n      weatherIconArray.includes(\"04n\")\n    ) {\n      weatherIcon = \"04d\";\n    } else if (\n      weatherIconArray.includes(\"03d\") ||\n      weatherIconArray.includes(\"03n\")\n    ) {\n      weatherIcon = \"03d\";\n    } else if (\n      weatherIconArray.includes(\"02d\") ||\n      weatherIconArray.includes(\"02n\")\n    ) {\n      weatherIcon = \"02d\";\n    } else {\n      weatherIcon = \"01d\";\n    }\n    return weatherIcon;\n  }\n\n  setDayOfWeek(dayCheck) {\n    if (dayCheck === 0) {\n      dayOfWeek = \"Sunday\";\n    } else if (dayCheck === 1) {\n      dayOfWeek = \"Monday\";\n    } else if (dayCheck === 2) {\n      dayOfWeek = \"Tuesday\";\n    } else if (dayCheck === 3) {\n      dayOfWeek = \"Wednesday\";\n    } else if (dayCheck === 4) {\n      dayOfWeek = \"Thursday\";\n    } else if (dayCheck === 5) {\n      dayOfWeek = \"Friday\";\n    } else if (dayCheck === 6) {\n      dayOfWeek = \"Saturday\";\n    }\n    return dayOfWeek;\n  }\n\n  tempSort(a, b) {\n    return a - b;\n  }\n\n  renderHelper = () => {\n    const forecast = this.props.forecast;\n\n    if (this.props.forecast.length === 0 && !this.props.weather.main) {\n      return <div>Loading...</div>;\n    } else if (this.props.forecast.length === 0) {\n      const weather = this.props.weather;\n      const dayCheck = new Date(weather.dt * 1000).getDay();\n      this.setDayOfWeek(dayCheck);\n      currentTemp = weather.main.temp.toFixed(0);\n      minimumTemp = weather.main.temp_min.toFixed(0);\n      maximumTemp = weather.main.temp_max.toFixed(0);\n      windSpeed = weather.wind.speed.toFixed(0);\n      windDirection = \"\";\n      this.setWeatherIcon(weather);\n    } else {\n      currentTemp = forecast[Math.floor(forecast.length / 2)].main.temp.toFixed(\n        0\n      );\n      const dayCheck = new Date(forecast[0].dt * 1000).getDay();\n      this.setDayOfWeek(dayCheck);\n\n      const minTempArray = forecast\n        .map(min => min.main.temp_min)\n        .sort(this.tempSort);\n      minimumTemp = minTempArray[0].toFixed(0);\n\n      const maxTempArray = forecast\n        .map(max => max.main.temp_max)\n        .sort(this.tempSort);\n      maximumTemp = maxTempArray[maxTempArray.length - 1].toFixed(0);\n\n      const totalWindSpeed = forecast\n        .map(speed => speed.wind.speed)\n        .reduce((acc, value) => acc + value);\n      windSpeed = (totalWindSpeed / forecast.length).toFixed(0);\n\n      const totalWindDegrees = forecast\n        .map(deg => deg.wind.deg)\n        .reduce((acc, value) => acc + value);\n      const windDirectionDegrees = (totalWindDegrees / forecast.length).toFixed(\n        0\n      );\n\n      this.setWindDirection(windDirectionDegrees);\n      this.setWeatherIcon(forecast);\n    }\n  };\n\n  render() {\n    this.renderHelper();\n    return (\n      <div className=\"day\">\n        <div className=\"day-date\">{dayOfWeek}</div>\n        <div className=\"weather-icon\">\n          <img\n            alt=\"weather icon for daily condition\"\n            src={`https://openweathermap.org/img/w/${weatherIcon}.png`}\n          />\n        </div>\n        <div className=\"current-temp\">{currentTemp}&deg;</div>\n        <div className=\"min-max\">\n          <div className=\"min\">{minimumTemp}&deg; L</div>\n          <div className=\"max\">{maximumTemp}&deg; H</div>\n        </div>\n        <div className=\"wind\">{`${windDirection} ${windSpeed}mph`}</div>\n      </div>\n    );\n  }\n}\n\nconst mapStateToProps = state => {\n  return {\n    weather: state.weather\n  };\n};\n\nexport default connect(\n  mapStateToProps,\n  { getWeather }\n)(Day);\n","import React from \"react\";\nimport { connect } from \"react-redux\";\nimport Day from \"./Day\";\nimport { getForecast } from \"../actions\";\n\nclass Forecast extends React.Component {\n  componentDidMount() {\n    const lat = this.props.location.lat[0].geometry.location.lat;\n    const long = this.props.location.long[0].geometry.location.lng;\n    this.props.getForecast(lat, long);\n    // this.props.getCurrentWeather(lat, long);\n  }\n\n  renderHelper = () => {\n    if (!this.props.forecast.list) {\n      return <div>Loading...</div>;\n    } else {\n      const testDay = new Date().getDate();\n      let list = this.props.forecast.list;\n      let today = [],\n        secondDay = [],\n        thirdDay = [],\n        fourthDay = [],\n        fifthDay = [];\n\n      for (let i = 0; i < list.length; i++) {\n        const listDay = new Date(list[i].dt * 1000).getDate();\n        if (testDay === listDay) {\n          today.push(list[i]);\n        } else if (testDay + 1 === listDay) {\n          secondDay.push(list[i]);\n        } else if (testDay + 2 === listDay) {\n          thirdDay.push(list[i]);\n        } else if (testDay + 3 === listDay) {\n          fourthDay.push(list[i]);\n        } else if (testDay + 4 === listDay) {\n          fifthDay.push(list[i]);\n        }\n      }\n      return (\n        <div className=\"forecast\">\n          <Day\n            forecast={today}\n            lat={this.props.location.lat[0].geometry.location.lat}\n            long={this.props.location.long[0].geometry.location.lng}\n          />\n          <Day forecast={secondDay} />\n          <Day forecast={thirdDay} />\n          <Day forecast={fourthDay} />\n          <Day forecast={fifthDay} />\n        </div>\n      );\n    }\n  };\n\n  render() {\n    return this.renderHelper();\n  }\n}\n\nconst mapStateToProps = state => {\n  return {\n    forecast: state.forecast\n    // weather: state.weather\n  };\n};\n\nexport default connect(\n  mapStateToProps,\n  { getForecast }\n)(Forecast);\n","import React from \"react\";\nimport { connect } from \"react-redux\";\nimport { getLocation } from \"../actions\";\nimport LocationTime from \"./LocationTime\";\nimport Forecast from \"./Forecast\";\n\nimport \"./App.css\";\n\nclass Container extends React.Component {\n  componentDidMount() {\n    this.props.getLocation();\n  }\n\n  renderHelper = () => {\n    if (this.props.error) {\n      return (\n        <div className=\"no-location\">\n          Please allow geolocation to see weather data!\n        </div>\n      );\n    } else {\n      if (!this.props.cityState.city) {\n        return <div>Loading...</div>;\n      } else {\n        return (\n          <div className=\"container\">\n            <div className=\"photo-credit\">\n              Photo by{\" \"}\n              <a\n                href={`${\n                  this.props.photoProfile.links.html\n                }?utm_source=weather_apputm_medium=referral`}\n              >\n                {this.props.photoName.name}\n              </a>{\" \"}\n              on{\" \"}\n              <a href=\"https://unsplash.com/?utm_source=weather_app&utm_medium=referral\">\n                Unsplash\n              </a>\n            </div>\n            <LocationTime location={this.props.cityState} />\n            <Forecast location={this.props.latLong} />\n          </div>\n        );\n      }\n    }\n  };\n\n  render() {\n    return this.renderHelper();\n  }\n}\n\nconst mapStateToProps = state => {\n  if (state.location.message) {\n    return {\n      error: state.location.message\n    };\n  } else {\n    return {\n      cityState: {\n        city: state.location.results,\n        state: state.location.results\n      },\n      latLong: {\n        lat: state.location.results,\n        long: state.location.results\n      }\n    };\n  }\n};\n\nexport default connect(\n  mapStateToProps,\n  { getLocation }\n)(Container);\n","import React from \"react\";\nimport Container from \"./Container\";\nimport { connect } from \"react-redux\";\nimport { getBackgroundImage } from \"../actions\";\n\nimport \"./App.css\";\n\nclass App extends React.Component {\n  componentDidMount() {\n    this.props.getBackgroundImage();\n  }\n\n  renderHelper = () => {\n    if (!this.props.image) {\n      return <div>Loading...</div>;\n    } else {\n      return (\n        <div\n          className=\"app\"\n          style={{\n            margin: \"0\",\n            height: \"100vh\",\n            width: \"100vw\",\n            backgroundColor: \"black\",\n            backgroundImage: `url(${this.props.image.raw}&w=1600)`,\n            backgroundPosition: \"center\",\n            backgroundRepeat: \"no-repeat\"\n          }}\n        >\n          <Container\n            photoProfile={this.props.photographerProfile}\n            photoName={this.props.photographerName}\n          />\n        </div>\n      );\n    }\n  };\n  render() {\n    return <div className=\"app\">{this.renderHelper()}</div>;\n  }\n}\nconst mapStateToProps = state => {\n  return {\n    image: state.image.urls,\n    photographerProfile: state.image.user,\n    photographerName: state.image.user\n  };\n};\n\nexport default connect(\n  mapStateToProps,\n  { getBackgroundImage }\n)(App);\n","import { combineReducers } from \"redux\";\nimport imageReducer from \"./imageReducer\";\nimport locationReducer from \"./locationReducer\";\nimport forecastReducer from \"./forecastReducer\";\nimport weatherReducer from \"./weatherReducer\";\n\nexport default combineReducers({\n  image: imageReducer,\n  location: locationReducer,\n  forecast: forecastReducer,\n  weather: weatherReducer\n});\n","export default (state = {}, action) => {\n  switch (action.type) {\n    case \"FETCH_IMAGE\":\n      return action.payload;\n    default:\n      return state;\n  }\n};\n","export default (state = {}, action) => {\n  switch (action.type) {\n    case \"FETCH_LOCATION\":\n      return action.payload;\n    default:\n      return state;\n  }\n};\n","export default (state = {}, action) => {\n  switch (action.type) {\n    case \"FETCH_FORECAST\":\n      return action.payload;\n    default:\n      return state;\n  }\n};\n","export default (state = {}, action) => {\n  switch (action.type) {\n    case \"FETCH_WEATHER\":\n      return action.payload;\n    default:\n      return state;\n  }\n};\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport { Provider } from \"react-redux\";\nimport { createStore, applyMiddleware } from \"redux\";\nimport thunk from \"redux-thunk\";\n\nimport App from \"./components/App\";\nimport reducers from \"./reducers\";\n\nconst store = createStore(reducers, applyMiddleware(thunk));\n\nReactDOM.render(\n  <Provider store={store}>\n    <App />\n  </Provider>,\n  document.getElementById(\"root\")\n);\n"],"sourceRoot":""}